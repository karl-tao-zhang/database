王伟超
wangweichao@tedu.cn

MySQL-Day01笔记
1.MySQL概述
  1.什么是数据库
    数据库是一个存储数据的仓库
  2.都有哪些公司在用数据库
    金融机构、游戏网站、购物网站、论坛网站... ...
  3.提供数据库服务的软件
    1.软件分类
      MySQL, Mariadb,SQL_Server, Oracle,  DB2, MongoDB ... ...
    2.在生产环境中，如何选择使用哪个数据库
      1.是否开源
        开源软件：MySQL, Mariadb, MongoDB     开源不等于免费！！
        商业软件：Oracle, DB2, SQL_Server
      2.是否跨平台
        不跨平台：SQL_Server
        跨平台：MySQL, Oracle, Mariadb, DB2, MongoDB
      3.公司的类型
        商业软件：政府部门、金融机构
        开源软件：游戏网站、购物网站、论坛网站 ... ...
  4.MySQL的特点
    1.关系型数据库
      1.关系型数据库的特点
        1.数据是以行和列的形式去存储的
        2.这一系列的行和列称为表
        3.表中的每一行叫一条记录
        4.表中的每一列叫一个字段
        5.表和表之间的逻辑关联叫关系
  　　　　2.示例
  　　　　　　1.关系型数据库存储
  　　　　　　　　表１、学生信息表
  　　　　　　　　　　姓名　　　　年龄　　　　班级
  　　　　　　　　　　星矢　　　　２５　　　　三班
                      水冰月　　　２３　　　六班　
        	  表２、班级信息表
         	 　　班级　　　　　　班主任
         	 　　三班            大空翼
         	 　　六班            松人
        2.非关系型数据库中存储
        　　{"姓名":"牛郎", "年龄":25,"班级":"AID1803", "班主任":"卢大大"}
        　　{"姓名":"织女", "年龄":23,"班级":"AID1801", "班主任":"孙大大"}
　　　　2.跨平台
　　　　　　可以在Unix、Linux、Windows上运行数据库服务
　　　　3.支持多种编程语言
　　　　　　python、java、php ... ...
        4.数据库软件、数据库、数据仓库
           1.数据库软件
             是一种软件，可以看得见，可操作，来实现数据库逻辑功能
           2.数据库
             是一种逻辑概念，用来存放数据的仓库，通过数据库软件来实现，侧重存储
           3.数据仓库
             数据仓库主要用于数据擦挖掘和数据分析

             网购：
               数据库：user  ---用户名和密码
               数据仓库：哪个时间段用户登录量最多，哪个用户一年购物最多…

2.MySQL的安装
　　1.Ubuntu安装MySQL服务　　　　RedHat(红帽)、CentOS、Ubuntu
    1.安装服务端
      sudo apt-get install mysql-server
    2.安装客户端
    　　sudo apt-get install mysql-client
    3. Ubuntu安装软件
        sudo apt-get update
        sudo apt-get -f install 修复依赖关系
        sudo apt-gei install 软件包
  2.Windows安装MySQL服务
    1.下载MySQL安装包(windows)
      mysql-installer***5.7.***.msi
    2.双击、按照教程安装即可

3.启动和连接MySQL服务
  1.服务端启动
  　　1.查看MySQL服务状态
  　　　　sudo /etc/init.d/mysql start
    2.停止、启动、重启MySQL服务
    　　sudo /etc/init.d/mysql stop　| start | restart
  2.客户端连接
    1.命令格式
    　　mysql -h主机地址　-u用户名 -p密码
    　　mysql -hlocalhost -uroot -p123456
    2.本地连接可以省略 -h 选项
    　　mysql -u用户名 -p密码
      mysql -uroot -p123456

4.基本SQL命令
  1.SQL命令的使用规则
    1.每条SQL命令必须以　; 结尾
    2.SQL命令不区分字母大小写
    3.使用 \c 来终止命令的执行　(Linux中　ctrl + c)

  2.库的管理
　　  1.库的基本操作
　　　　　　1.查看已有的操作
　　　　　　　　show databases;
      2.创建库
        create database 库名;
        create database 库名 default charset=utf8;  # utf8格式
        create database 库名 character set utf8;     也行!
      3.查看创建库的语句(字符集)
      　　show create database 库名;
      4.查看当前所在库
        select database();
      5.切换库
        use 库名;
      6.查看库中已有表
        show tables;
      7.删除库
      　　drop database 库名;
    2.库名的命名规则
      1.可以使用数字、字母、下划线，但是不能使用纯数字
      2.库名区分字母大小写
      3.库名具有唯一性
      4.不能使用特殊字符和MySQL关键字
    3.练习
    　　1.创建库AID1803db,指定字符集为utf8
      2.切换到该库AID1803db
      3.查看当前所在库
      select database();
      4.查看库中已有表
      5.查看AID1803db的字符集(查看创建库的语句)
      6.删除库AID1803db
  3.表的管理
  　　1.表的基本操作
  　　　　1.创建表(指定字符集)
  　　　　　　create table 表名(
        字段名 数据类型,
        字段名　数据类型,
        ... ...
        );
    　　2.查看创建表的语句(字符集)
        show create table 表名;
      3.查看表结构
      　　desc 表名;
      4.删除表
        drop table 表名;
    2.表的命名规则(同库的命名规则)
    3.练习
    　　1.创建库　python
      2.在库 python 中创建表　py_mysql,指定字符集utf8
        表中字段有　id int 和 name char(20) 两个字段
      3.查看表　py_mysql 的字符集以及存储引擎
      4.查看　py_mysql 的表结构
      5.删除表 py_mysql
    4.注意
      1.所有的数据都是以文件的形式存放在数据库目录下
      2.数据库目录：/var/lib/mysql
5.更改库、表的默认字符集
  1.方法
    通过更改MySQL服务的配置文件来实现
  2.步骤
    1.获取root权限
      sudo -i
    2.切换到配置文件所  在路径
    　　cd /etc/mysql/mysql.conf.d
    3.先备份
      cp -p mysqld.cnf mysqld.cnf.bak
      (-p选项连同原文件权限一起复制)
    4.更改mysqld.cnf配置   用vi打开mysqld.cnf,
      subl mysqld.cnf
    　　[mysqld]
    在tmpdir          = /tmp　下插入下行
      character_set_server=utf8 保存退出
    5.重启mysql服务
      /etc/init.d/mysql restart　| reload
    6.退出超级用户　exit
    7.登录到mysql验证:mysql -uroot -p123456
                    create database 库名;
                    show create database 库名;
6.表记录管理
　　1.在表中插入记录
    1.insert into 表名　values(值1),(值2),...,(值N);
    2.insert into 表名(字段名列表)　values(值1),...(值N);
  2.查询表记录
  　　1.select * from 表名[where 条件];
    2.select 字段名1,字段名2,...,字段名N from 表名[where 条件];
　　3.练习
　　　　1.查看所有的库
    2.创建新库　stu1
    3.在库　stu1　中创建表　students,
      1.
      2.
      3.
      4.              增删改查 ！！
    4.
    5.
    6.       
    7.   
    8.
    9.

7.客户端把数据存储到数据库服务器上的过程
　　 1.连接到数据库服务器 :　mysql -rtoot -p123456
   2.选择一个库 : user 库名;
   3.创建表或者修改表　: create ...
   4.断开与数据库服务器的连接 : exit | quit | \q

8.名词介绍
  1.DB(database)
    DB就是数据库,存储数据的仓库
　　2.DBMS(database management system)
    数据库管理系统
    管理数据库的软件: MySQL、Oracle、MongoDB ... ...
  3.DBS(database system)
    数据库系统
    DBS = DB(存储) + DBMS(数据库软件) + 数据库的应用(财务管理系统、人事管理系统) + 用户
9.数据类型
  1.数值类型(有符号signed和无符号unsigned)
　　　　1.整型
　　　　　　1.int 大整型(4个字节)
　　　　　　　　取值范围: 0 ~ 2 ** 32-1(42亿多)
            2.tinyint 微小整型(1个字节)
          　　1.有符号(signed默认): -128 ~ 127
              2.无符号(unsigned): 0-255
            3.smallint 小整形(2个字节)
              取值范围: 0 ~ 65535
            4.bigint 极大整型(8个字节)
              取值范围: 0 ~ 2 ** 64 - 1
　　　　2.浮点型
　　　　　　1.float(4个字节，最多显示7个有效位)
        1.用法
        　　字段名　float(m,n) m:表示总位数　n:小数位位数
        　　salary  float(5,2) 取值范围？-999.99 ~ 999.99
        2.注意
          1.浮点型插入整数时会自动补全小数位位数
          2.小数位如果多于指定的位数，会对指定位的下一位进行四舍五入
          　　float(5,2)  --> 23.123 --> 23.12
      2.double(8个字节,最多显示15个有效位)
        １．用法
        　　　　字段名　double(m,n)
      3.decimal(M+2个字节，最多显示28个有效位)
        1.用法
        　字段名　decimal(28,5)
        2.存储空间（整数部分和小数部分分开存储）
          规则：将9的倍数包装成4个字节
             余数    字节
             1-2      1 
             3-4      2
             5-6      3
             7-8      4
           decimal(19,9)
             整数部分：10/9商1余1  4字节+1字节=5字节
             小数部分：9/9商1余0   4字节+0字节=4字节
  2.字符类型
    1.char(定长)
    　　1.取值范围: 1 ~ 255
      2.不给定宽度默认为1
    2.varchar(变长)
    　　1.取值范围: 1 ~ 65535
      2.注意
　　　　　　　　1.varchar没有默认宽度，必须给定一个宽度值
　　　　　　　　　　name varchar(20)
    3.char 和　varchar 的特点
    　　1.char            'A    补19个空格' 很浪费空间
        浪费存储空间，但是性能高
    　　2.varchar         'A' 直接就是A  很直接 性能低 
        节省存储空间，但是性能低
    4.text / longtext(4G)
    5.练习
    　　1.创建表stuinfo,字段要求如下：
    　　　　学号: id 大整型
    　　　　姓名: 变长，宽度为15
        班级: classes 定长，宽度为7
        年龄:age 微小整型，要求不能输入负数
        身高:height 浮点型，小数位为２位
    　　2.查看表结构
      3.在表　stuinfo 中插入２条记录(行)
      4.查询所有表记录
      5.查询所有学生的姓名、年龄和身高
      6.数值类型的宽度和字符类型的宽度区别
         1.数值类型宽度为显示宽度，值用于select查询显示，和占用存储空间大小无关，用zerofill来显示效果
         2.字符类型的宽度超过则无法进行存储 
  3.枚举类型
  　　1.定义
       字段值只能在列举的范围内选择
      2.enum(...) 单选(最多有65535个不同的值)
       字段名　enum(值1,值2,...,值N)
      3.set(...) 多选(最多有64个不同的值)
    　　字段名 set(值1,值2,...,值N)
       插入记录时　"python,boy,Mysql"

  4.日期时间类型
    1.year : 年　YYYY
    2.date : 日期　YYYYMMDD
    3.time : 时间　HHMMSS
    4.datetime : 日期时间 YYYYMMDDHHMMSS
    5.timestamp : 日期时间 YYYYMMDDHHMMSS

create table t6(
id int,
name varchar(15),
age tinyint unsigned,
birth_year year,
birthday date,
class time,
meeting datetime
)default charset = utf8;

insert into t6 values
(1,'武松',40,1979,19790520,090000,20180504000000);

    6.注意
    　　1.插入记录时datetime字段不给值默认返回NULL
      2.插入记录时timestamp字段不给值默认返回系统当前时间

10.表字段的操作
　　1.语法:　alter table 表名　执行动作;
　　　　1.添加字段
　　    alter table 表名 add 字段名 数据类型;first | after字段名
    2.删除字段(真的是连带着记录删除字段,不是删除字段里的记录)
      alter table 表名 drop 字段名;
    3.修改字段的数据类型
      alter table 表名 modify 字段名　新数据类型;
      # 修改数据类型时会受到表中原有数据的限制
    4.修改字段名
      alter table 表名　change 旧字段名　新字段名　数据类型;
    5.修改表明
    　　alter table 表名 rename 新表名;

1.面试题
　　1.填空题
　　　　1.MySQL中的数据类型有(数值类型、字符类型、枚举类型、日期时间类型)
    2.关系型数据库的核心内容是　__关系__ 即　__二维表__
  2.简答题
  　　1.简述客户端把数据存储到数据库服务器上的过程
    2.char和varchar的区别？各自的特点？
2.操作题
　　1.创建一个学校的库　school
  2.
  3.查看students的表结构
  4.在students中添加一个字段id,添加在第一列
  5.在表中随意插入５条记录
  6.查看所有的学生信息
  7.查看所有学生的姓名和成绩
3.练习使用一下　vi 文本编辑器ａｓｄ




create table students(
学号 int,
年龄 int,
成绩 int,
性别 enum('gril','boy'),
爱好 set('11','22','33'),
入学时间 date
)default charset=utf8;

desc students;

alter table students add id int first;

desc students;

insert into students values(1,2,20,'120','boy','11',20180301),(2,3,21,'121','boy','11',20180302),(3,4,22,'122','boy','11',20180303),(4,5,23,'123','boy','11',20180304),(5,6,24,'124','boy','11',20180305);

insert into students values(1,20,'120','boy','11'),(2,21,'121','boy','11'),(3,22,'122','boy','11'),(4,23,'123','boy','11'),(5,24,'124','boy','11');




在students中添加一个字段height，加在age字段之后
将score字段的数据类型改为decimal
在students中插入3条完整记录
查看所有学生的姓名和成绩
查看没有及格的学生信息

create table students(id int(3) zerofill,
name varchar(20),
age tinyint unsigned,
score float(5,2),
sex enum('boy,girl,secret'),
likes set('python','mysql','games','animals')
);

insert into students values(1,'lucy',22,66.53,163.22,'girl','python,mysql'),
(2,'lux',25,29.25,150.16,'girl','games,animals'),
(3,'draven',30,99.33,180.65,'boy','python,mysql,games')
;



















select alter table students add 姓名 char(20) after 学号;